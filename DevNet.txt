Data formats 
XML > The Extensible Markup Language Like HTML
-useful 
    Data exchange between computer systems
    Data storage
XML Does Not Use Predefined Tags

Entity references
    &lt; (<)
    &gt; (>)
    &amp; (&)
    &quot; (")
    &apos; (').



 

API = Aplication programming interface
REST = Representation State Transfer, es una arquitectura no protocolo


*CRUD 
create
read
update
delete

*HTTP Methods
Post- create
get - read 
put - update  - replace data
patch - update  update data
Delete - delete

*http- response status code
200 ok 
201 create 

400 bad request
401 unauthorized authentication missing 
403 fobbiden request was understood, but no allowed
404 no found

500 internal server error 
503 service unavailable.

header 
content type specify the format ot the data in the body  ej application/json
accept specify the requested format for return the data  ej application/json
Authorization
date
in request ans response

*Authorization
none
Basic base64
token
Auth Authorization:bearer  API request the token

SOAP = Simple Object Access Protocol

basic Auth = 7617 
== Basic <u:p>  base64
www-authenticate: Basic realm="Authorization Required"
Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==


token-base authentication
JWT = Json Web Token


ANSIBLE
1.Automation and orchestration.
(what)              (when) 

2. python 
3 freee
4 agentless
5.modules


cisco
ACI - APIC- DC
      APIC EM
DNA- IPAM 

VIRL

++++++++++++++++++++++++++++

***netconf***
ssh
tcp
default port 830

RPC= Remote Procedure Call

get operacional get >>> YANG 
get config
get edit

--netconf--
XR-- XE
headers
  'Content-Type': 'application/yang-data+json',
  'Accept': 'application/yang-data+json',
  'Authorization': 'Basic YWRtaW46QWRtaW5fMTIzNCE='



URI Generic Syntax (RFC 2396 – http://www.ietf.org/rfc/rfc2396.txt ) defines thefollowing:-Identifier:  
An identifier is an object that can act as a reference to something thathas identify.-A URI can be further classified as a locator, a name, or both.-
The term "Uniform Resource Locator" (URL) refers to the subset of URI thatidentify resources via a representation of their primary access 
mechanism(e.g., their network "location"), rather than identifying the resource by nameor by some other attribute(s) of that resource.-
The term "Uniform Resource Name" (URN) refers to the subset of URI thatare required to remain globally unique and persistent even when the resource ceases to exist or 
becomes unavailable.


restconf
http-verbs
https://github.com/CiscoDevNet/netprog_basics

pip= python packet installer 

Ambiente Virtual
virtualenv "name" --python=python2.7 >>>>>>> --python=python3
-Iniciar env
source name/bin/active
-desactivar
deactive 
******************************************************

https://ios-xe-mgmt-latest.cisco.com:9443/webui/#


*************************************
NX-API- cli - http/https only post
NX-API restconf- 

support json-rpc >>> method CLI commands

CLI config
ins api >>xml/json

conf.
en nexus>>>>>>feature nxapi

nxapi sandbox

insieme= ins
not a rest API

https://{{host}}:{{port}}/ins
++++++++++++++++++++++++++++++++++++

NX-API-REST
more powerfull
DME= data managment engine
Provides API access to MIT
-Northbound.
NX-API REST
CLI
JSON RPC

-SOUTHBOUND
NX-OS Processes

MIT = managment information tree >> all object in nx-os 
sys =root
RN RELATIVE NAME >>> IDENTIFY OBJECT "SIBLINGS" UNIQUE WITHIN A PARENT OBJECT.
DN DISTINGUISHED NAME >>>>> UNIQUE WITHIN MIT
https://sbx-nxos-mgmt.cisco.com/visore.html

Postman>>Authorization = x-auth-token

Python>>"APIC-cookie"

headers
'x-auth-token': '{{token}}',
  'Content-Type': 'application/json',
  'Cookie': 'APIC-cookie

**************************************************************
Meraki API
cloud netwoking
SN you have the control
over HTTP with JSON data

dashboard API
Scaning APi 
Captive portal API
webhooks

API 
https://api.meraki.com/api/v0 >> pagina devnet

https://dashboard.meraki.com/api/v0/organizations >> training

***header***
X-Cisco-Meraki-API-Key >> 6bec40cf957de430a6f1f2baa056b99a4fac9ea0 (postman)

++++++++++++++++++++++++++++++++++++++++++++++++++
meraki SDK
The Meraki Dashboard API use REST conventions over HTTP with JSON data

SDK - libreria propia

********************************************************************

Data Center

ACI = Application Center Infrastructure

VXLAN- transmit the L2 information in L3 packets

APIC = Application policy Infrastructure controller

EPG = end point group

+++objet model++++++ 
root = uni
RN = Name file.
Dn = path file
policy

https://sandboxapicdc.cisco.com/visore.html#/
ciscopsdt

https://sandboxapicdc.cisco.com/

methods 
!.- Rest Api

2 cobra SDK 
- ACI cobra
-ACI Model 

3 ACI Toolkit
-SDK
-Example
 -application

**ACi headers 
Content-type application/json
x-auth-token

**AUTH
x-auth-token-postman
APIC-cookie- python


